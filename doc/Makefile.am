## Process this file with automake to generate Makefile.in
#
# $Id: Makefile.am,v 1.59 2021/10/05 23:01:50 setlorg Exp $
#
# Free software (c) dB - see file COPYING for license (GPL).
#
# Makefile.in -> Makefile via "configure" or "config.status" script.


# Suppress warning caused by our overriding the "dvi:" rule.
#
# Also allow the use of GNU Make extensions.
#
# Also, spew .info files into the builddir rather than the srcdir,
# for consistency with where .pdf and .html files go.  (Note however
# that these 3 forms of the documentation are also distributed, as the
# Texinfo system is a bit much to require casual installers to have.)
#
AUTOMAKE_OPTIONS = -Wno-override -Wno-portability info-in-builddir

prt = printf '%s\n'
not_V = test x"$$V" = x0
noisy = `$(not_V) || $(prt) -v`

info_TEXINFOS = setl.texi \
                setl-tut.texi \
                setl-user.texi \
                setl-lang.texi \
                setl-lib.texi \
                setl-imp.texi \
                setl-ext.texi \
                setl-maint.texi

genned_info = $(info_TEXINFOS:.texi=.info)
genned_html = $(info_TEXINFOS:.texi=.html)
genned_pdf  = $(info_TEXINFOS:.texi=.pdf)

dist_man_MANS = setl.1 \
                setlcpp.1 \
                setltran.1

# We don't need to mention the .info files here, as automake will
# generate rules to distribute them automatically:
dist_html_DATA = index.html $(genned_html)
dist_pdf_DATA = $(genned_pdf)

# The texinfo.tex.patch is best not edited directly, but rather
# regenerated using "make texinfo-patch" at the top level when
# circumstances suggest.  See the extensive comments in ../main.mk
# for when that might be.
EXTRA_DIST = include.texi texinfo.tex.patch

# To be deleted (along with many other files) on a "make distclean";
# the .tar.gz file can be left over by an interrupted "make dist",
# and stamp-config-doc is created by ../main.mk to witness the
# creation of doc/Makefile:
DISTCLEANFILES = stamp-config-doc \
                 install.log \
                 $(PACKAGE_TARNAME)-$(PACKAGE_VERSION).tar.gz

AM_MAKEINFOHTMLFLAGS = --no-split --no-headers

# The .info files are automatically included in what is generated by
# "all".  We extend that to .html and .pdf files as well by listing
# html and pdf in all-local; automake generates rules for those goals.
#
# Note that .info, .html, and .pdf files are all generated into the
# build tree even though we also distribute them.

all-local:  html pdf

html-local:  $(HTMLS)
# Hack to suppress the superfluous filenames generated by texi2any
# (makeinfo with the --html option) in the link text of doc-to-doc
# cross-refs (the links themselves retain the filenames, of course).
#
# HTMLS is an undocumented automake-produced variable, given as a
# dep above to make sure this rule will not be executed before or
# in parallel with the .html files that need to be genned before we
# edit them.  FIXME - Find a better way to do this?
#
	@for f in $(genned_html); do \
	  if test -r $(builddir)/$$f -a -w $(builddir)/$$f; then \
	    $(not_V) || $(prt) "editing $$f -> $$f.tmp"; \
	    f=$(builddir)/$$f; \
	    sed -e 's:(setl-lib)::g;s:(setl-user)::g' <$$f >$$f.tmp; \
	    if cmp -s $$f $$f.tmp; then \
	      rm -f $(noisy) $$f.tmp; \
	    else \
	      mv -f $(noisy) $$f.tmp $$f; \
	    fi; \
	  fi; \
	done

dist-hook:
	$(MAKE) $(AM_MAKEFLAGS) builddir=$(distdir) html-local

gen_deps = include.texi texinfo.tex
$(genned_info):  $(gen_deps)
$(genned_html):  $(gen_deps)
$(genned_pdf):   $(gen_deps)

# In the local extensions of install-data and uninstall below, it is
# assumed that all the documentation is installed or uninstalled
# together.  If you make a finer-grained goal such as install-html,
# that act won't automatically be recorded in the installation log.
#
# DESTDIR is respected by automake-generated rules, so we must use it
# in the same way in our logging here.

destman = $(DESTDIR)$(mandir)
destinfo = $(DESTDIR)$(infodir)
desthtml = $(DESTDIR)$(htmldir)
destpdf = $(DESTDIR)$(pdfdir)

install-data-hook:
	@$(prt) "`date` - GNU SETL man pages installed under $(destman)" \
	 >>install.log
	@$(prt) "`date` - setl*.info files installed in $(destinfo)" \
	 >>install.log
	@$(prt) "`date` - setl*.html files installed in $(desthtml)" \
	 >>install.log
	@$(prt) "`date` - setl*.pdf files installed in $(destpdf)" \
	 >>install.log

uninstall-hook:
	@$(prt) "`date` - GNU SETL man pages removed from $(destman)" \
	 >>install.log
	@$(prt) "`date` - setl*.info files removed from $(destinfo)" \
	 >>install.log
	@$(prt) "`date` - setl*.html files removed from $(desthtml)" \
	 >>install.log
	@$(prt) "`date` - setl*.pdf files removed from $(destpdf)" \
	 >>install.log

# Automake generates rules for cleaning .html and .pdf files, but does
# not do so for .info files, even given the info-in-builddir option.
# We prefer a more uniform treatment.  Note that the top-level Makefile
# offers some protection of distributed .info, .html, and .pdf files at
# the "distclean" level and below, so that users won't normally have to
# have the tools to regenerate them even with this rule in place.
#
clean-local:
	rm -f $(genned_info)

# This overrides the default rule that automake likes to generate,
# because we don't actually need .dvi files, and texi2dvi will choke in
# the attempt to produce them on at least two build platforms (this is
# even though texi2dvi --pdf works fine for producing .pdf files).
# It may relate to the sub-invocation of etex as opposed to pdfetex.
# At any rate, "make distcheck" invokes the dvi rule, which is why it
# needs to indicate success.  Note that this rule is also informative.
#
dvi:
	@$(prt) 'Creation of .dvi files is not currently supported.'

## Makefile.am ends here
